@use "sass:math";

@function in_list($list, $value) {
  @return (null != index($list, $value));
}

@mixin grid-container($gutter: $grid-gutter) {
  width: 100%;

  padding-right: math.div($gutter, 2);
  padding-left: math.div($gutter, 2);

  margin-right: auto;
  margin-left: auto;
}

@mixin grid-max-widths($names: map-keys($grid-max-widths), $max-widths: $grid-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $max-width in $max-widths {
    @if (in_list($names, $breakpoint)) {
      @include media-breakpoint-up($breakpoint, $breakpoints) {
        max-width: $max-width;
      }
    }
  }
}

@mixin grid-row($gutter: $grid-gutter) {
  display: flex;
  flex-wrap: wrap;

  margin-right: math.div($gutter, -2);
  margin-left: math.div($gutter, -2);
}

@mixin grid-row-column($count) {
  & > * {
    flex: 0 0 math.div(100%, $count);
    max-width: math.div(100%, $count);
  }
}

@mixin grid-row-columns($columns: $grid-columns, $breakpoints: $grid-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      @for $i from 1 through $columns {
        @if not($infix == "") {
          &._cols-#{$infix}-#{$i} {
            @include grid-row-column($i);
          }
        }

        @else {
          &._cols-#{$i} {
            @include grid-row-column($i);
          }
        }
      }
    }
  }
}

@mixin grid-column($size, $columns: $grid-columns) {
  flex: 0 0 percentage(math.div($size, $columns));
  max-width: percentage(math.div($size, $columns));
}

@mixin grid-column-offset($size, $columns: $grid-columns) {
  margin-left: percentage(math.div($size, $columns));
}

@mixin grid-columns($columns: $grid-columns, $gutter: $grid-gutter, $breakpoints: $grid-breakpoints) {
  @include grid-column($columns, $columns);

  position: relative;
  width: 100%;
  padding-right: math.div($gutter, 2);
  padding-left: math.div($gutter, 2);

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      @if not($infix == "") {
        &._#{$infix} {
          flex-basis: 0;
          flex-grow: 1;
          min-width: 0;
          max-width: none;
        }
      }

      @for $i from 1 through $columns {
        @if not($infix == "") {
          &._#{$infix}-#{$i} {
            @include grid-column($i, $columns);
          }
        }
      }

      @for $i from 1 through $columns {
        @if not($infix == "") {
          &._order-#{$infix}-#{$i} {
            order: $i;
          }
        }

        @else {
          &._order-#{$i} {
            order: $i;
          }
        }
      }

      @for $i from 0 through $columns {
        @if not($infix == "") and not($infix == "" and $i == 0) {
          &._offset-#{$infix}-#{$i} {
            @include grid-column-offset($i, $columns);
          }
        }
      }
    }
  }
}
